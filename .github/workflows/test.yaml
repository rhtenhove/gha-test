name: Build, test, CodeQL and push container image
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  build-amd64:
    name: Build amd64 image
    runs-on: ubuntu-latest
    outputs:
      lowercase-registry: ${{ steps.lowercase-registry.outputs.REGISTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Lowercase ghcr.io registry name
        id: lowercase-registry
        run: |
          echo "::set-output name=REGISTRY::${GITHUB_REPOSITORY,,}"
      - name: Build and file cache amd64
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          tags: ghcr.io/${{ steps.lowercase-registry.outputs.REGISTRY }}:amd64
          outputs: type=docker,dest=/tmp/gha-test-amd64.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.event.pull_request.user.login }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: gha-test-amd64
          path: /tmp/gha-test-amd64.tar
      - name: Build and registry cache push amd64
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          tags: ghcr.io/${{ steps.lowercase-registry.outputs.REGISTRY }}:amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    name: Build arm64 image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Lowercase ghcr.io registry name
        id: lowercase-registry
        run: |
          echo "::set-output name=REGISTRY::${GITHUB_REPOSITORY,,}"
      - name: Build arm64
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          tags: ghcr.io/${{ steps.lowercase-registry.outputs.REGISTRY }}:arm64
          outputs: type=docker,dest=/tmp/gha-test-amd64.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-amd64:
    name: Test amd64 image
    runs-on: ubuntu-latest
    needs: build-amd64
    container:
      image: ghcr.io/${{ needs.build-amd64.outputs.lowercase-registry }}:amd64
    steps:
      - name: Test amd64
        run: |
          curl ifconfig.me

  push:
    name: Push amd64 and arm64 image
    runs-on: ubuntu-latest
    needs:
      - test-amd64
      - build-arm64
    if: ${{ github.event_name == 'push' && github.repository == 'rhtenhove/gha-test' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set tags to push
        id: push-tags
        run: |
          PUSH_TAGS=docker.io/rhtenhove/gha-test:${GITHUB_REF_NAME}
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            PUSH_TAGS=${PUSH_TAGS},docker.io/rhtenhove/gha-test:latest
          fi
          export PUSH_TAGS
          echo "::set-output name=PUSH_TAGS::${PUSH_TAGS}"
      - name: Push to docker.io registry
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.push-tags.outputs.PUSH_TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
